name: Develop

on:
  push:
    branches:
      - develop

env:
  CACHED_DEPENDENCY_PATHS: ${{ github.workspace }}/node_modules
  AWS_EB_S3_BUCKET: elasticbeanstalk-ap-northeast-2-${{ secrets.AWS_ACCOUNT_ID }}
  PREFIX_NAME: backoffice
  EB_BACKOFFICE: backoffice-api-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # - name: Create Source Bundle
    #   run: |
    #     git archive --format=zip v$PREFIX_NAME -o $PREFIX_NAME.zip
    #     zip -urq $PREFIX_NAME.zip dist

    - name: Head Commit
      run: echo "${{github.event.head_commit.message}}"

    # 서버가 생성되면 설정값 변경후 주석 해제 하겠습니다..

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ap-northeast-2

    # - name: Upload Source Bundle
    #   run: aws s3 cp $DEPLOY_VERSION.zip s3://$AWS_EB_S3_BUCKET/DAPI/$DEPLOY_VERSION.zip
    # - name: Create Application Version
    #   env:
    #     COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
    #   run: aws elasticbeanstalk create-application-version --application-name DAPI --version-label $DEPLOY_VERSION --description "$COMMIT_MESSAGE" --source-bundle S3Bucket="$AWS_EB_S3_BUCKET",S3Key="DAPI/$DEPLOY_VERSION.zip"

    - name: Environment
      run: |
        echo "$EB_BACKOFFICE"
        echo "APP_NAME=$EB_BACKOFFICE" >> $GITHUB_ENV
        echo "APP_VERSION='$PREFIX_NAME'" >> $GITHUB_ENV

    - name: App Check
      if: ${{ !env.APP_NAME }}
      run: exit 1

    - name: App Version
      run: |
        echo "$APP_NAME"
        echo "$APP_VERSION"

    # 서버 생성 후 주석 해제
    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ap-northeast-2

    # - name: Deploy Elastic Beanstalk
    #   # aws elasticbeanstalk update-tags-for-resource --resource-arn $AWS_EB_ENVIRONMENT/$APP_NAME --tags-to-add Key=Version,Value=$APP_VERSION
    #   run: aws elasticbeanstalk update-environment --environment-name $APP_NAME --version-label $APP_VERSION
